{
  "refine": [
    {
      "range": {
        "start": 330,
        "end": 331
      },
      "lineAndCol": null,
      "message": "Expression has type:   _B\nContext expected type: none()",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "X",
      "explanationOrNull": null,
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 330,
                "end_byte": 331
              }
            },
            "expr": {
              "Var": {
                "n": "X",
                "location": {
                  "TextRange": {
                    "start_byte": 330,
                    "end_byte": 331
                  }
                }
              }
            },
            "expected": "NoneType",
            "got": {
              "VarType": {
                "n": 3,
                "name": "_B"
              }
            },
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 404,
        "end": 405
      },
      "lineAndCol": null,
      "message": "Expression has type:   {B, A}\nContext expected type: {none(), none()}",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "X",
      "explanationOrNull": "  at tuple index 1:\n  {B, A} is not compatible with {none(), none()}\n  because\n  B is not compatible with none()",
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 404,
                "end_byte": 405
              }
            },
            "expr": {
              "Var": {
                "n": "X",
                "location": {
                  "TextRange": {
                    "start_byte": 404,
                    "end_byte": 405
                  }
                }
              }
            },
            "expected": {
              "TupleType": {
                "arg_tys": [
                  "NoneType",
                  "NoneType"
                ]
              }
            },
            "got": {
              "TupleType": {
                "arg_tys": [
                  {
                    "VarType": {
                      "n": 4,
                      "name": "B"
                    }
                  },
                  {
                    "VarType": {
                      "n": 5,
                      "name": "A"
                    }
                  }
                ]
              }
            },
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 491,
        "end": 492
      },
      "lineAndCol": null,
      "message": "Expression has type:   #D{atom() => atom()}\nContext expected type: none()",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "M",
      "explanationOrNull": null,
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 491,
                "end_byte": 492
              }
            },
            "expr": {
              "Var": {
                "n": "M",
                "location": {
                  "TextRange": {
                    "start_byte": 491,
                    "end_byte": 492
                  }
                }
              }
            },
            "expected": "NoneType",
            "got": {
              "DictMap": {
                "k_type": "AtomType",
                "v_type": "AtomType"
              }
            },
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 589,
        "end": 590
      },
      "lineAndCol": null,
      "message": "Expression has type:   fun((B | A) -> A)\nContext expected type: fun((A | B) -> none())",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "F",
      "explanationOrNull": "  fun((B | A) -> A) is not compatible with fun((A | B) -> none())\n  because\n  A is not compatible with none()",
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 589,
                "end_byte": 590
              }
            },
            "expr": {
              "Var": {
                "n": "F",
                "location": {
                  "TextRange": {
                    "start_byte": 589,
                    "end_byte": 590
                  }
                }
              }
            },
            "expected": {
              "FunType": {
                "arg_tys": [
                  {
                    "UnionType": {
                      "tys": [
                        {
                          "VarType": {
                            "n": 6,
                            "name": "A"
                          }
                        },
                        {
                          "VarType": {
                            "n": 7,
                            "name": "B"
                          }
                        }
                      ]
                    }
                  }
                ],
                "res_ty": "NoneType"
              }
            },
            "got": {
              "FunType": {
                "arg_tys": [
                  {
                    "UnionType": {
                      "tys": [
                        {
                          "VarType": {
                            "n": 7,
                            "name": "B"
                          }
                        },
                        {
                          "VarType": {
                            "n": 6,
                            "name": "A"
                          }
                        }
                      ]
                    }
                  }
                ],
                "res_ty": {
                  "VarType": {
                    "n": 6,
                    "name": "A"
                  }
                }
              }
            },
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 702,
        "end": 703
      },
      "lineAndCol": null,
      "message": "Expression has type:   fun((atom() | A) -> A)\nContext expected type: fun((A | atom()) -> none())",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "F",
      "explanationOrNull": "  fun((atom() | A) -> A) is not compatible with fun((A | atom()) -> none())\n  because\n  A is not compatible with none()",
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 702,
                "end_byte": 703
              }
            },
            "expr": {
              "Var": {
                "n": "F",
                "location": {
                  "TextRange": {
                    "start_byte": 702,
                    "end_byte": 703
                  }
                }
              }
            },
            "expected": {
              "FunType": {
                "arg_tys": [
                  {
                    "UnionType": {
                      "tys": [
                        {
                          "VarType": {
                            "n": 3,
                            "name": "A"
                          }
                        },
                        "AtomType"
                      ]
                    }
                  }
                ],
                "res_ty": "NoneType"
              }
            },
            "got": {
              "FunType": {
                "arg_tys": [
                  {
                    "UnionType": {
                      "tys": [
                        "AtomType",
                        {
                          "VarType": {
                            "n": 3,
                            "name": "A"
                          }
                        }
                      ]
                    }
                  }
                ],
                "res_ty": {
                  "VarType": {
                    "n": 3,
                    "name": "A"
                  }
                }
              }
            },
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 1515,
        "end": 1516
      },
      "lineAndCol": null,
      "message": "Expression has type:   term()\nContext expected type: U",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "X",
      "explanationOrNull": null,
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 1515,
                "end_byte": 1516
              }
            },
            "expr": {
              "Var": {
                "n": "X",
                "location": {
                  "TextRange": {
                    "start_byte": 1515,
                    "end_byte": 1516
                  }
                }
              }
            },
            "expected": {
              "VarType": {
                "n": 4,
                "name": "U"
              }
            },
            "got": "AnyType",
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 1683,
        "end": 1684
      },
      "lineAndCol": null,
      "message": "Expression has type:   term()\nContext expected type: U",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "X",
      "explanationOrNull": null,
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 1683,
                "end_byte": 1684
              }
            },
            "expr": {
              "Var": {
                "n": "X",
                "location": {
                  "TextRange": {
                    "start_byte": 1683,
                    "end_byte": 1684
                  }
                }
              }
            },
            "expected": {
              "VarType": {
                "n": 4,
                "name": "U"
              }
            },
            "got": "AnyType",
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 1875,
        "end": 1876
      },
      "lineAndCol": null,
      "message": "Expression has type:   _T\nContext expected type: U",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "X",
      "explanationOrNull": null,
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 1875,
                "end_byte": 1876
              }
            },
            "expr": {
              "Var": {
                "n": "X",
                "location": {
                  "TextRange": {
                    "start_byte": 1875,
                    "end_byte": 1876
                  }
                }
              }
            },
            "expected": {
              "VarType": {
                "n": 4,
                "name": "U"
              }
            },
            "got": {
              "VarType": {
                "n": 3,
                "name": "_T"
              }
            },
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 2082,
        "end": 2085
      },
      "lineAndCol": null,
      "message": "Expression has type:   term()\nContext expected type: none()",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "Val",
      "explanationOrNull": null,
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 2082,
                "end_byte": 2085
              }
            },
            "expr": {
              "Var": {
                "n": "Val",
                "location": {
                  "TextRange": {
                    "start_byte": 2082,
                    "end_byte": 2085
                  }
                }
              }
            },
            "expected": "NoneType",
            "got": "AnyType",
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 2195,
        "end": 2201
      },
      "lineAndCol": null,
      "message": "Expression has type:   {number(), binary()}\nContext expected type: {none(), none()}",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "{X, Y}",
      "explanationOrNull": "  at tuple index 1:\n  {number(), binary()} is not compatible with {none(), none()}\n  because\n  number() is not compatible with none()",
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 2195,
                "end_byte": 2201
              }
            },
            "expr": {
              "Tuple": {
                "elems": [
                  {
                    "Var": {
                      "n": "X",
                      "location": {
                        "TextRange": {
                          "start_byte": 2196,
                          "end_byte": 2197
                        }
                      }
                    }
                  },
                  {
                    "Var": {
                      "n": "Y",
                      "location": {
                        "TextRange": {
                          "start_byte": 2199,
                          "end_byte": 2200
                        }
                      }
                    }
                  }
                ],
                "location": {
                  "TextRange": {
                    "start_byte": 2195,
                    "end_byte": 2201
                  }
                }
              }
            },
            "expected": {
              "TupleType": {
                "arg_tys": [
                  "NoneType",
                  "NoneType"
                ]
              }
            },
            "got": {
              "TupleType": {
                "arg_tys": [
                  "NumberType",
                  "BinaryType"
                ]
              }
            },
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 2375,
        "end": 2381
      },
      "lineAndCol": null,
      "message": "Expression has type:   {number(), atom()}\nContext expected type: {none(), none()}",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "{N, A}",
      "explanationOrNull": "  at tuple index 1:\n  {number(), atom()} is not compatible with {none(), none()}\n  because\n  number() is not compatible with none()",
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 2375,
                "end_byte": 2381
              }
            },
            "expr": {
              "Tuple": {
                "elems": [
                  {
                    "Var": {
                      "n": "N",
                      "location": {
                        "TextRange": {
                          "start_byte": 2376,
                          "end_byte": 2377
                        }
                      }
                    }
                  },
                  {
                    "Var": {
                      "n": "A",
                      "location": {
                        "TextRange": {
                          "start_byte": 2379,
                          "end_byte": 2380
                        }
                      }
                    }
                  }
                ],
                "location": {
                  "TextRange": {
                    "start_byte": 2375,
                    "end_byte": 2381
                  }
                }
              }
            },
            "expected": {
              "TupleType": {
                "arg_tys": [
                  "NoneType",
                  "NoneType"
                ]
              }
            },
            "got": {
              "TupleType": {
                "arg_tys": [
                  "NumberType",
                  "AtomType"
                ]
              }
            },
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 2619,
        "end": 2620
      },
      "lineAndCol": null,
      "message": "Expression has type:   ['a' | 'b']\nContext expected type: pid()",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "X",
      "explanationOrNull": null,
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 2619,
                "end_byte": 2620
              }
            },
            "expr": {
              "Var": {
                "n": "X",
                "location": {
                  "TextRange": {
                    "start_byte": 2619,
                    "end_byte": 2620
                  }
                }
              }
            },
            "expected": "PidType",
            "got": {
              "ListType": {
                "t": {
                  "UnionType": {
                    "tys": [
                      {
                        "AtomLitType": {
                          "atom": "a"
                        }
                      },
                      {
                        "AtomLitType": {
                          "atom": "b"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 2698,
        "end": 2699
      },
      "lineAndCol": null,
      "message": "Expression has type:   ['a' | 'b']\nContext expected type: ['a']",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "X",
      "explanationOrNull": "  ['a' | 'b'] is not compatible with ['a']\n  because\n  'a' | 'b' is not compatible with 'a'\n  because\n  'b' is not compatible with 'a'",
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 2698,
                "end_byte": 2699
              }
            },
            "expr": {
              "Var": {
                "n": "X",
                "location": {
                  "TextRange": {
                    "start_byte": 2698,
                    "end_byte": 2699
                  }
                }
              }
            },
            "expected": {
              "ListType": {
                "t": {
                  "AtomLitType": {
                    "atom": "a"
                  }
                }
              }
            },
            "got": {
              "ListType": {
                "t": {
                  "UnionType": {
                    "tys": [
                      {
                        "AtomLitType": {
                          "atom": "a"
                        }
                      },
                      {
                        "AtomLitType": {
                          "atom": "b"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 2823,
        "end": 2824
      },
      "lineAndCol": null,
      "message": "Expression has type:   ['a' | 'b']\nContext expected type: pid()",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "X",
      "explanationOrNull": null,
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 2823,
                "end_byte": 2824
              }
            },
            "expr": {
              "Var": {
                "n": "X",
                "location": {
                  "TextRange": {
                    "start_byte": 2823,
                    "end_byte": 2824
                  }
                }
              }
            },
            "expected": "PidType",
            "got": {
              "ListType": {
                "t": {
                  "UnionType": {
                    "tys": [
                      {
                        "AtomLitType": {
                          "atom": "a"
                        }
                      },
                      {
                        "AtomLitType": {
                          "atom": "b"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 2903,
        "end": 2904
      },
      "lineAndCol": null,
      "message": "Expression has type:   ['a' | 'b']\nContext expected type: ['a']",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "X",
      "explanationOrNull": "  ['a' | 'b'] is not compatible with ['a']\n  because\n  'a' | 'b' is not compatible with 'a'\n  because\n  'b' is not compatible with 'a'",
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 2903,
                "end_byte": 2904
              }
            },
            "expr": {
              "Var": {
                "n": "X",
                "location": {
                  "TextRange": {
                    "start_byte": 2903,
                    "end_byte": 2904
                  }
                }
              }
            },
            "expected": {
              "ListType": {
                "t": {
                  "AtomLitType": {
                    "atom": "a"
                  }
                }
              }
            },
            "got": {
              "ListType": {
                "t": {
                  "UnionType": {
                    "tys": [
                      {
                        "AtomLitType": {
                          "atom": "a"
                        }
                      },
                      {
                        "AtomLitType": {
                          "atom": "b"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 3077,
        "end": 3080
      },
      "lineAndCol": null,
      "message": "Expression has type:   {'cons', 'nil' | my_list()}\nContext expected type: number()",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "Res",
      "explanationOrNull": null,
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 3077,
                "end_byte": 3080
              }
            },
            "expr": {
              "Var": {
                "n": "Res",
                "location": {
                  "TextRange": {
                    "start_byte": 3077,
                    "end_byte": 3080
                  }
                }
              }
            },
            "expected": "NumberType",
            "got": {
              "TupleType": {
                "arg_tys": [
                  {
                    "AtomLitType": {
                      "atom": "cons"
                    }
                  },
                  {
                    "UnionType": {
                      "tys": [
                        {
                          "AtomLitType": {
                            "atom": "nil"
                          }
                        },
                        {
                          "RemoteType": {
                            "id": {
                              "module": "refine",
                              "name": "my_list",
                              "arity": 0
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 3291,
        "end": 3292
      },
      "lineAndCol": null,
      "message": "Expression has type:   term()\nContext expected type: pid()",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "X",
      "explanationOrNull": null,
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 3291,
                "end_byte": 3292
              }
            },
            "expr": {
              "Var": {
                "n": "X",
                "location": {
                  "TextRange": {
                    "start_byte": 3291,
                    "end_byte": 3292
                  }
                }
              }
            },
            "expected": "PidType",
            "got": "AnyType",
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 3395,
        "end": 3396
      },
      "lineAndCol": null,
      "message": "Expression has type:   term()\nContext expected type: pid()",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "X",
      "explanationOrNull": null,
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 3395,
                "end_byte": 3396
              }
            },
            "expr": {
              "Var": {
                "n": "X",
                "location": {
                  "TextRange": {
                    "start_byte": 3395,
                    "end_byte": 3396
                  }
                }
              }
            },
            "expected": "PidType",
            "got": "AnyType",
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 3521,
        "end": 3522
      },
      "lineAndCol": null,
      "message": "Expression has type:   term()\nContext expected type: pid()",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "X",
      "explanationOrNull": null,
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 3521,
                "end_byte": 3522
              }
            },
            "expr": {
              "Var": {
                "n": "X",
                "location": {
                  "TextRange": {
                    "start_byte": 3521,
                    "end_byte": 3522
                  }
                }
              }
            },
            "expected": "PidType",
            "got": "AnyType",
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 3645,
        "end": 3646
      },
      "lineAndCol": null,
      "message": "Expression has type:   {term(), term()}\nContext expected type: pid()",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "X",
      "explanationOrNull": null,
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 3645,
                "end_byte": 3646
              }
            },
            "expr": {
              "Var": {
                "n": "X",
                "location": {
                  "TextRange": {
                    "start_byte": 3645,
                    "end_byte": 3646
                  }
                }
              }
            },
            "expected": "PidType",
            "got": {
              "TupleType": {
                "arg_tys": [
                  "AnyType",
                  "AnyType"
                ]
              }
            },
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 3738,
        "end": 3739
      },
      "lineAndCol": null,
      "message": "Expression has type:   #my_rec{}\nContext expected type: none()",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "R",
      "explanationOrNull": null,
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 3738,
                "end_byte": 3739
              }
            },
            "expr": {
              "Var": {
                "n": "R",
                "location": {
                  "TextRange": {
                    "start_byte": 3738,
                    "end_byte": 3739
                  }
                }
              }
            },
            "expected": "NoneType",
            "got": {
              "RecordType": {
                "name": "my_rec",
                "module": "refine"
              }
            },
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 3831,
        "end": 3832
      },
      "lineAndCol": null,
      "message": "Expression has type:   #my_rec{}\nContext expected type: none()",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "R",
      "explanationOrNull": null,
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 3831,
                "end_byte": 3832
              }
            },
            "expr": {
              "Var": {
                "n": "R",
                "location": {
                  "TextRange": {
                    "start_byte": 3831,
                    "end_byte": 3832
                  }
                }
              }
            },
            "expected": "NoneType",
            "got": {
              "RecordType": {
                "name": "my_rec",
                "module": "refine"
              }
            },
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 4079,
        "end": 4080
      },
      "lineAndCol": null,
      "message": "Expression has type:   tuple()\nContext expected type: #my_rec{}",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "R",
      "explanationOrNull": null,
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 4079,
                "end_byte": 4080
              }
            },
            "expr": {
              "Var": {
                "n": "R",
                "location": {
                  "TextRange": {
                    "start_byte": 4079,
                    "end_byte": 4080
                  }
                }
              }
            },
            "expected": {
              "RecordType": {
                "name": "my_rec",
                "module": "refine"
              }
            },
            "got": "AnyTupleType",
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 4182,
        "end": 4183
      },
      "lineAndCol": null,
      "message": "Expression has type:   #my_rec{}\nContext expected type: {'not_my_rec', term(), term()}",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "R",
      "explanationOrNull": "  at tuple index 1:\n  {'my_rec', number(), atom()} is not compatible with {'not_my_rec', term(), term()}\n  because\n  'my_rec' is not compatible with 'not_my_rec'",
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 4182,
                "end_byte": 4183
              }
            },
            "expr": {
              "Var": {
                "n": "R",
                "location": {
                  "TextRange": {
                    "start_byte": 4182,
                    "end_byte": 4183
                  }
                }
              }
            },
            "expected": {
              "TupleType": {
                "arg_tys": [
                  {
                    "AtomLitType": {
                      "atom": "not_my_rec"
                    }
                  },
                  "AnyType",
                  "AnyType"
                ]
              }
            },
            "got": {
              "RecordType": {
                "name": "my_rec",
                "module": "refine"
              }
            },
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 4239,
        "end": 4256
      },
      "lineAndCol": null,
      "message": "Unknown id: unknown:unknown/0",
      "uri": "https://fb.me/eqwalizer_errors#unknown_id",
      "code": "unknown_id",
      "expressionOrNull": null,
      "explanationOrNull": null,
      "diagnostic": {
        "InvalidForm": {
          "UnknownId": {
            "location": {
              "TextRange": {
                "start_byte": 4239,
                "end_byte": 4256
              }
            },
            "id": {
              "module": "unknown",
              "name": "unknown",
              "arity": 0
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 4261,
        "end": 4321
      },
      "lineAndCol": null,
      "message": "record_as_tuple7_neg/1 references type with invalid definition: #bad_rec{}",
      "uri": "https://fb.me/eqwalizer_errors#reference_to_invalid_type",
      "code": "reference_to_invalid_type",
      "expressionOrNull": null,
      "explanationOrNull": null,
      "diagnostic": {
        "InvalidForm": {
          "TransitiveInvalid": {
            "location": {
              "TextRange": {
                "start_byte": 4261,
                "end_byte": 4321
              }
            },
            "name": "record_as_tuple7_neg/1",
            "references": [
              "#bad_rec{}"
            ]
          }
        }
      }
    },
    {
      "range": {
        "start": 4552,
        "end": 4553
      },
      "lineAndCol": null,
      "message": "Expression has type:   {'my_rec', atom(), number()}\nContext expected type: #my_rec{}",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "R",
      "explanationOrNull": "  at tuple index 2:\n  {'my_rec', atom(), number()} is not compatible with {'my_rec', number(), atom()}\n  because\n  atom() is not compatible with number()",
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 4552,
                "end_byte": 4553
              }
            },
            "expr": {
              "Var": {
                "n": "R",
                "location": {
                  "TextRange": {
                    "start_byte": 4552,
                    "end_byte": 4553
                  }
                }
              }
            },
            "expected": {
              "RecordType": {
                "name": "my_rec",
                "module": "refine"
              }
            },
            "got": {
              "TupleType": {
                "arg_tys": [
                  {
                    "AtomLitType": {
                      "atom": "my_rec"
                    }
                  },
                  "AtomType",
                  "NumberType"
                ]
              }
            },
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 4824,
        "end": 4825
      },
      "lineAndCol": null,
      "message": "Expression has type:   #my_rec{}\nContext expected type: number()",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "X",
      "explanationOrNull": null,
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 4824,
                "end_byte": 4825
              }
            },
            "expr": {
              "Var": {
                "n": "X",
                "location": {
                  "TextRange": {
                    "start_byte": 4824,
                    "end_byte": 4825
                  }
                }
              }
            },
            "expected": "NumberType",
            "got": {
              "RecordType": {
                "name": "my_rec",
                "module": "refine"
              }
            },
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 4934,
        "end": 4935
      },
      "lineAndCol": null,
      "message": "Expression has type:   #my_rec{}\nContext expected type: number()",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "X",
      "explanationOrNull": null,
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 4934,
                "end_byte": 4935
              }
            },
            "expr": {
              "Var": {
                "n": "X",
                "location": {
                  "TextRange": {
                    "start_byte": 4934,
                    "end_byte": 4935
                  }
                }
              }
            },
            "expected": "NumberType",
            "got": {
              "RecordType": {
                "name": "my_rec",
                "module": "refine"
              }
            },
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 4990,
        "end": 4991
      },
      "lineAndCol": null,
      "message": "Expression has type:   fun((T) -> 'ok')\nContext expected type: T",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "X",
      "explanationOrNull": null,
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 4990,
                "end_byte": 4991
              }
            },
            "expr": {
              "Var": {
                "n": "X",
                "location": {
                  "TextRange": {
                    "start_byte": 4990,
                    "end_byte": 4991
                  }
                }
              }
            },
            "expected": {
              "VarType": {
                "n": 3,
                "name": "T"
              }
            },
            "got": {
              "FunType": {
                "arg_tys": [
                  {
                    "VarType": {
                      "n": 3,
                      "name": "T"
                    }
                  }
                ],
                "res_ty": {
                  "AtomLitType": {
                    "atom": "ok"
                  }
                }
              }
            },
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 5050,
        "end": 5051
      },
      "lineAndCol": null,
      "message": "Expression has type:   #my_rec{}\nContext expected type: 'ok'",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "X",
      "explanationOrNull": null,
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 5050,
                "end_byte": 5051
              }
            },
            "expr": {
              "Var": {
                "n": "X",
                "location": {
                  "TextRange": {
                    "start_byte": 5050,
                    "end_byte": 5051
                  }
                }
              }
            },
            "expected": {
              "AtomLitType": {
                "atom": "ok"
              }
            },
            "got": {
              "RecordType": {
                "name": "my_rec",
                "module": "refine"
              }
            },
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 5261,
        "end": 5262
      },
      "lineAndCol": null,
      "message": "Expression has type:   {'my_rec', atom(), number()}\nContext expected type: #my_rec{}",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "X",
      "explanationOrNull": "  at tuple index 2:\n  {'my_rec', atom(), number()} is not compatible with {'my_rec', number(), atom()}\n  because\n  atom() is not compatible with number()",
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 5261,
                "end_byte": 5262
              }
            },
            "expr": {
              "Var": {
                "n": "X",
                "location": {
                  "TextRange": {
                    "start_byte": 5261,
                    "end_byte": 5262
                  }
                }
              }
            },
            "expected": {
              "RecordType": {
                "name": "my_rec",
                "module": "refine"
              }
            },
            "got": {
              "TupleType": {
                "arg_tys": [
                  {
                    "AtomLitType": {
                      "atom": "my_rec"
                    }
                  },
                  "AtomType",
                  "NumberType"
                ]
              }
            },
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 5473,
        "end": 5474
      },
      "lineAndCol": null,
      "message": "Expression has type:   #my_rec{}\nContext expected type: {'my_rec', atom(), number()}",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "X",
      "explanationOrNull": "  at tuple index 2:\n  {'my_rec', number(), atom()} is not compatible with {'my_rec', atom(), number()}\n  because\n  number() is not compatible with atom()",
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 5473,
                "end_byte": 5474
              }
            },
            "expr": {
              "Var": {
                "n": "X",
                "location": {
                  "TextRange": {
                    "start_byte": 5473,
                    "end_byte": 5474
                  }
                }
              }
            },
            "expected": {
              "TupleType": {
                "arg_tys": [
                  {
                    "AtomLitType": {
                      "atom": "my_rec"
                    }
                  },
                  "AtomType",
                  "NumberType"
                ]
              }
            },
            "got": {
              "RecordType": {
                "name": "my_rec",
                "module": "refine"
              }
            },
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 5717,
        "end": 5718
      },
      "lineAndCol": null,
      "message": "Expression has type:   #my_rec{}\nContext expected type: {'my_rec', atom(), atom()}",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "X",
      "explanationOrNull": "  at tuple index 2:\n  {'my_rec', number(), atom()} is not compatible with {'my_rec', atom(), atom()}\n  because\n  number() is not compatible with atom()",
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 5717,
                "end_byte": 5718
              }
            },
            "expr": {
              "Var": {
                "n": "X",
                "location": {
                  "TextRange": {
                    "start_byte": 5717,
                    "end_byte": 5718
                  }
                }
              }
            },
            "expected": {
              "TupleType": {
                "arg_tys": [
                  {
                    "AtomLitType": {
                      "atom": "my_rec"
                    }
                  },
                  "AtomType",
                  "AtomType"
                ]
              }
            },
            "got": {
              "RecordType": {
                "name": "my_rec",
                "module": "refine"
              }
            },
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 5781,
        "end": 5791
      },
      "lineAndCol": null,
      "message": "Expression has type:   atom() | number()\nContext expected type: number()",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "ttt1(X, 1)",
      "explanationOrNull": "  atom() | number() is not compatible with number()\n  because\n  atom() is not compatible with number()",
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 5781,
                "end_byte": 5791
              }
            },
            "expr": {
              "LocalCall": {
                "id": "ttt1/2",
                "args": [
                  {
                    "Var": {
                      "n": "X",
                      "location": {
                        "TextRange": {
                          "start_byte": 5786,
                          "end_byte": 5787
                        }
                      }
                    }
                  },
                  {
                    "IntLit": {
                      "value": 1,
                      "location": {
                        "TextRange": {
                          "start_byte": 5789,
                          "end_byte": 5790
                        }
                      }
                    }
                  }
                ],
                "location": {
                  "TextRange": {
                    "start_byte": 5781,
                    "end_byte": 5791
                  }
                }
              }
            },
            "expected": "NumberType",
            "got": {
              "UnionType": {
                "tys": [
                  "AtomType",
                  "NumberType"
                ]
              }
            },
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 5852,
        "end": 5853
      },
      "lineAndCol": null,
      "message": "Expression has type:   #my_rec{} | 'a'\nContext expected type: {'my_rec', term(), term()}",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "X",
      "explanationOrNull": "  #my_rec{} | 'a' is not compatible with {'my_rec', term(), term()}\n  because\n  'a' is not compatible with {'my_rec', term(), term()}",
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 5852,
                "end_byte": 5853
              }
            },
            "expr": {
              "Var": {
                "n": "X",
                "location": {
                  "TextRange": {
                    "start_byte": 5852,
                    "end_byte": 5853
                  }
                }
              }
            },
            "expected": {
              "TupleType": {
                "arg_tys": [
                  {
                    "AtomLitType": {
                      "atom": "my_rec"
                    }
                  },
                  "AnyType",
                  "AnyType"
                ]
              }
            },
            "got": {
              "UnionType": {
                "tys": [
                  {
                    "RecordType": {
                      "name": "my_rec",
                      "module": "refine"
                    }
                  },
                  {
                    "AtomLitType": {
                      "atom": "a"
                    }
                  }
                ]
              }
            },
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 6043,
        "end": 6044
      },
      "lineAndCol": null,
      "message": "Expression has type:   'undefined' | binary()\nContext expected type: binary()",
      "uri": "https://fb.me/eqwalizer_errors#incompatible_types",
      "code": "incompatible_types",
      "expressionOrNull": "B",
      "explanationOrNull": "  'undefined' | binary() is not compatible with binary()\n  because\n  'undefined' is not compatible with binary()",
      "diagnostic": {
        "TypeError": {
          "ExpectedSubtype": {
            "location": {
              "TextRange": {
                "start_byte": 6043,
                "end_byte": 6044
              }
            },
            "expr": {
              "Var": {
                "n": "B",
                "location": {
                  "TextRange": {
                    "start_byte": 6043,
                    "end_byte": 6044
                  }
                }
              }
            },
            "expected": "BinaryType",
            "got": {
              "UnionType": {
                "tys": [
                  {
                    "AtomLitType": {
                      "atom": "undefined"
                    }
                  },
                  "BinaryType"
                ]
              }
            },
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    },
    {
      "range": {
        "start": 7691,
        "end": 7695
      },
      "lineAndCol": null,
      "message": "atom()",
      "uri": "https://fb.me/eqwalizer_errors#reveal_type",
      "code": "reveal_type",
      "expressionOrNull": null,
      "explanationOrNull": null,
      "diagnostic": {
        "TypeError": {
          "RevealTypeHint": {
            "t": "AtomType",
            "location": {
              "TextRange": {
                "start_byte": 7691,
                "end_byte": 7695
              }
            },
            "pipeline_context": {
              "module": "refine"
            }
          }
        }
      }
    }
  ]
}

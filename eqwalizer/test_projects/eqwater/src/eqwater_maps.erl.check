%%% Copyright (c) Meta Platforms, Inc. and……         |
%%%                                        |         |
%%% This source code is licensed under the……         |
%%% the LICENSE file in the root directory……         |
                                           |         |
-module(eqwater_maps).                     |         |
                                           |         |
-compile([export_all, nowarn_export_all]). |         |
                                           |         |
-spec map_occ_01(#{a := integer()} | ok) -……         |
map_occ_01(#{a := I}) when is_integer(I) -…… OK      |
map_occ_01(V) -> V.                        |         |
                                           |         |
-spec map_occ_02(#{a := any(), b := intege……         |
    -> #{a := integer(), b := integer()}.  |         |
map_occ_02(M = #{a := I}) when is_integer(…… OK      |
map_occ_02(M) -> M#{a => 0}.               |         |
                                           |         |
-spec map_occ_03(#{a => any(), b => intege……         |
    -> #{a := integer(), b => integer()}.  |         |
map_occ_03(M = #{a := I}) when is_integer(…… OK      |
map_occ_03(M) -> M#{a => 0}.               |         |
                                           |         |
-spec map_occ_04_neg(#{a => any(), b => in……         |
    -> #{a := integer(), b := integer()}.  |         |
map_occ_04_neg(M = #{a := I}) when is_inte…… ERROR   | M.
                                           |         | Expected: #S{a := number(), b := number()}
                                           |         | Got     : #S{a := number(), b => number()}
                                           |         | 
                                           |         | These associations do not match:
                                           |         | 
                                           |         |   #S{
                                           |         | -    b := ...
                                           |         | +    b => ...
                                           |         |      ...
                                           |         |   }
map_occ_04_neg(M) -> M#{a => 0}.           |         |
                                           |         |
-spec map_occ_05(#{a => integer(), b => in……         |
    -> #{a := integer(), b := integer()}.  |         |
map_occ_05(M = #{a := _, b := _}) -> M;    | OK      |
map_occ_05(M) -> M#{a => 0, b => 0}.       |         |
                                           |         |
-spec map_occ_06_neg(#{a => integer()} | o……         |
map_occ_06_neg(#{a := I}) when is_integer(…… ERROR   |
map_occ_06_neg(V) -> V.                    |         | V.
                                           |         | Expected: 'ok'
                                           |         | Got     : #S{} | 'ok'
                                           |         | 
                                           |         |   #S{} | 'ok' is not a subtype of 'ok'
                                           |         |   because
                                           |         |   #S{} is not a subtype of 'ok'
                                           |         |
-spec map_occ_07_neg                       |         |
    (#{a := integer()} | #{c := integer()}……         |
    -> #{b := integer()}.                  |         |
map_occ_07_neg(#{a := _}) -> #{b => 0};    | ERROR   |
map_occ_07_neg(M) -> M.                    |         | M.
                                           |         | Expected: #S{b := number()}
                                           |         | Got     : none() | #S{c := number()}
                                           |         | 
                                           |         |   none() | #S{c := number()} is not a subtype of #S{b := number()}
                                           |         |   because
                                           |         |   #S{c := number()} is not a subtype of #S{b := number()}
                                           |         |   These associations do not match:
                                           |         | 
                                           |         |   #S{
                                           |         | -    b := ...
                                           |         | +    c := ...
                                           |         |   }

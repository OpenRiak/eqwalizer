%%% Copyright (c) Meta Platforms, Inc. and……         |
%%%                                        |         |
%%% This source code is licensed under the……         |
%%% the LICENSE file in the root directory……         |
                                           |         |
-module(booleans).                         |         |
-compile([export_all, nowarn_export_all]). |         |
                                           |         |
-spec only_false() -> false.               |         |
only_false() -> false.                     | OK      |
                                           |         |
-spec only_true() -> true.                 |         |
only_true() -> true.                       | OK      |
                                           |         |
-spec b() -> boolean().                    |         |
b() -> false.                              | OK      |
                                           |         |
-spec dyn() -> eqwalizer:dynamic().        |         |
dyn() -> false.                            | OK      |
                                           |         |
-spec andalso1() -> false.                 |         |
andalso1() ->                              | OK      |
  only_false() andalso only_false().       |         |
                                           |         |
-spec andalso2() -> false.                 |         |
andalso2() ->                              | OK      |
  only_false() andalso only_true().        |         |
                                           |         |
-spec andalso3() -> false.                 |         |
andalso3() ->                              | OK      |
  only_true() andalso only_false().        |         |
                                           |         |
-spec andalso4() -> true.                  |         |
andalso4() ->                              | OK      |
  only_true() andalso only_true().         |         |
                                           |         |
-spec andalso5() -> 1.                     |         |
andalso5() ->                              | OK      |
  only_true() andalso 1.                   |         |
                                           |         |
-spec andalso6() -> false.                 |         |
andalso6() ->                              | OK      |
  only_false() andalso 1.                  |         |
                                           |         |
-spec andalso7_neg() -> boolean().         |         |
andalso7_neg() ->                          | ERROR   |
  1 andalso b().                           |         | 1.
                                           |         | Expected: boolean()
                                           |         | Got     : number()
                                           |         |
-spec andalso8() -> false.                 |         |
andalso8() ->                              | OK      |
  dyn() andalso only_false().              |         |
                                           |         |
-spec andalso9() -> false.                 |         |
andalso9() ->                              | OK      |
  only_false() andalso dyn().              |         |
                                           |         |
-spec andalso10_neg() -> true.             |         |
andalso10_neg() ->                         | ERROR   |
  dyn() andalso only_true().               |         | _ andalso _.
                                           |         | Expected: 'true'
                                           |         | Got     : 'false' | 'true'
                                           |         | 
                                           |         |   'false' | 'true' is not a subtype of 'true'
                                           |         |   because
                                           |         |   'false' is not a subtype of 'true'
                                           |         |
-spec andalso11() -> true.                 |         |
andalso11() ->                             | OK      |
  only_true() andalso dyn().               |         |
                                           |         |
-type trill() :: true.                     |         |
                                           |         |
-spec make_trill() -> trill().             |         |
make_trill() -> true andalso true.         | OK      |
                                           |         |
-spec andalso12() -> true.                 |         |
andalso12() ->                             | OK      |
  make_trill() andalso make_trill().       |         |

%%% Copyright (c) Meta Platforms, Inc. and……         |
%%%                                        |         |
%%% This source code is licensed under the……         |
%%% the LICENSE file in the root directory……         |
                                           |         |
-module(gradual_maybe).                    |         |
-feature(maybe_expr, enable).              |         |
                                           |         |
-compile([export_all, nowarn_export_all]). |         |
                                           |         |
-spec maybe_01({term(), atom()})           |         |
    -> atom().                             |         |
maybe_01(T) ->                             | OK      |
    maybe                                  |         |
        {ok, A} ?= T,                      |         |
        A                                  |         |
    else                                   |         |
        _ -> err                           |         |
    end.                                   |         |
                                           |         |
-spec maybe_02_neg({term(), term()})       |         |
    -> atom().                             |         |
maybe_02_neg(T) ->                         | ERROR   |
    maybe                                  |         |
        {ok, A} ?= T,                      |         |
        A                                  |         | A.
                                           |         | Expression has type:   term()
                                           |         | Context expected type: atom()
    else                                   |         |
        _ -> err                           |         |
    end.                                   |         |
                                           |         |
% In gradual mode, else patterns           |         |
% are just mapped to dynamic()             |         |
-spec maybe_03({term(), atom()})           |         |
    -> atom().                             |         |
maybe_03(T) ->                             | OK      |
    maybe                                  |         |
        {ok, A} ?= T,                      |         |
        A                                  |         |
    else                                   |         |
        B -> B                             |         |
    end.                                   |         |
                                           |         |
-spec maybe_04_neg({term(), atom()})       |         |
    -> atom().                             |         |
maybe_04_neg(T) ->                         | ERROR   |
    maybe                                  |         |
        {ok, A} ?= T,                      |         |
        A                                  |         |
    else                                   |         |
        _ -> 3                             |         | 3.
                                           |         | Expression has type:   number()
                                           |         | Context expected type: atom()
    end.                                   |         |
                                           |         |
-spec maybe_05_neg                         |         |
    ({ok, atom()} | {err, term()})         |         |
    -> atom().                             |         |
maybe_05_neg(T) ->                         | ERROR   |
    maybe                                  |         |
        {err, A} ?= T,                     |         | T.
                                           |         | Expression has type:   {'ok', atom()} | {'err', term()}
                                           |         | Context expected type: atom()
        A                                  |         |
    end.                                   |         |
                                           |         |
-spec maybe_06_neg                         |         |
    ({ok, atom()} | {err, term()})         |         |
    -> ok.                                 |         |
maybe_06_neg(T) ->                         | ERROR   |
    maybe                                  |         |
        {ok, A} ?= T,                      |         | T.
                                           |         | Expression has type:   {'ok', atom()} | {'err', term()}
                                           |         | Context expected type: 'ok'
        ok = B ?= A,                       |         |
        B                                  |         |
    end.                                   |         |
                                           |         |
-spec maybe_07                             |         |
    ({ok, atom()} | {err, term()})         |         |
    -> ok.                                 |         |
maybe_07(T) ->                             | OK      |
    maybe                                  |         |
        {ok, A} ?= T,                      |         |
        ok = B ?= A,                       |         |
        B                                  |         |
    else                                   |         |
        _ -> ok                            |         |
    end.                                   |         |
                                           |         |
-spec maybe_08_neg                         |         |
    ({ok, atom()} | {err, term()})         |         |
    -> err.                                |         |
maybe_08_neg(T) ->                         | ERROR   |
    maybe                                  |         |
        {ok, A} ?= T,                      |         |
        ok = B ?= A,                       |         |
        B                                  |         | B.
                                           |         | Expression has type:   'ok'
                                           |         | Context expected type: 'err'
    else                                   |         |
        _ -> ok                            |         |
    end.                                   |         |
                                           |         |
-spec maybe_09                             |         |
    ({ok, atom()})                         |         |
    -> number().                           |         |
maybe_09(T) ->                             | OK      |
    maybe                                  |         |
        {err, V} ?= T,                     |         |
        V                                  |         |
    else                                   |         |
        _ -> 0                             |         |
    end.                                   |         |
                                           |         |
-spec maybe_10                             |         |
    ({ok, atom()})                         |         |
    -> number().                           |         |
maybe_10(T) ->                             | OK      |
    maybe                                  |         |
        {err, V} ?= T,                     |         |
        V                                  |         |
    else                                   |         |
        A -> A                             |         |
    end.                                   |         |
                                           |         |
-spec maybe_11_neg                         |         |
    (a | b | c)                            |         |
    -> b | c.                              |         |
maybe_11_neg(T) ->                         | ERROR   |
    maybe                                  |         |
        a = A ?= T,                        |         | T.
                                           |         | Expression has type:   'a' | 'b' | 'c'
                                           |         | Context expected type: 'b' | 'c'
                                           |         | 
                                           |         |   'a' | 'b' | 'c' is not compatible with 'b' | 'c'
                                           |         |   because
                                           |         |   'a' is not compatible with 'b' | 'c'
                                           |         |   because
                                           |         |   'a' is not compatible with 'b'
        b                                  |         |
    end.                                   |         |
                                           |         |
-spec maybe_12                             |         |
    ({ok, a | b} | err)                    |         |
    -> ok | b | err.                       |         |
maybe_12(T) ->                             | OK      |
    maybe                                  |         |
        {ok, V} ?= T,                      |         |
        a = A ?= V,                        |         |
        ok                                 |         |
    else                                   |         |
        _ -> ok                            |         |
    end.                                   |         |
                                           |         |
-spec maybe_13_neg                         |         |
    (term()) -> ok.                        |         |
maybe_13_neg(T) ->                         | ERROR   |
    maybe                                  |         |
        A = ok ?= T                        |         |
    else                                   |         |
        a -> ok;                           |         |
        b -> ok;                           |         |
        c -> err                           |         | 'err'.
                                           |         | Expression has type:   'err'
                                           |         | Context expected type: 'ok'
    end.                                   |         |
                                           |         |
% Testing elab mode                        |         |
-spec maybe_14_neg                         |         |
    (term()) -> err.                       |         |
maybe_14_neg(T) ->                         | ERROR   |
    maybe                                  |         |
        A ?=                               |         |
            maybe                          |         | maybe ...
                                           |         | Expression has type:   {'a', term()} | {'b', {'a', term()}}
                                           |         | Context expected type: 'err'
                B ?= {a, T},               |         |
                V = {b, B},                |         |
                C ?= V                     |         |
            end                            |         |
    end.                                   |         |

%%% Copyright (c) Meta Platforms, Inc. and……         |
%%%                                        |         |
%%% This source code is licensed under the……         |
%%% the LICENSE file in the root directory……         |
                                           |         |
-module(dynamic_catch).                    |         |
-compile([export_all, nowarn_export_all]). |         |
                                           |         |
-spec foo() -> {ok, atom()}.               |         |
foo() -> {ok, foo}.                        | OK      |
                                           |         |
-spec test01_pos() -> atom().              |         |
test01_pos() ->                            | OK      |
  case catch foo() of                      |         |
    {ok, A} -> A;                          |         |
    {err, A} -> A                          |         |
  end.                                     |         |
                                           |         |
-spec test02_neg() -> binary().            |         |
test02_neg() ->                            | ERROR   |
  case catch foo() of                      |         |
    {ok, A} -> A;                          |         | A.
                                           |         | Expression has type:   atom() | dynamic()
                                           |         | Context expected type: binary()
                                           |         | 
                                           |         |   atom() | dynamic() is not compatible with binary()
                                           |         |   because
                                           |         |   atom() is not compatible with binary()
    {err, A} -> A                          |         |
  end.                                     |         |

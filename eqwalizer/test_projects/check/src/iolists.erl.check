%%% Copyright (c) Meta Platforms, Inc. and……         |
%%%                                        |         |
%%% This source code is licensed under the……         |
%%% the LICENSE file in the root directory……         |
                                           |         |
-module(iolists).                          |         |
                                           |         |
-compile([export_all, nowarn_export_all]). |         |
                                           |         |
-spec mk_io_list1(                         |         |
    byte() | binary() | iolist()           |         |
) -> iolist().                             |         |
mk_io_list1(X) ->                          | OK      |
    [X].                                   |         |
                                           |         |
-spec first(iolist()) ->                   |         |
byte() | binary() | iolist().              |         |
first(IoList)                              | OK      |
    when is_binary(IoList) -> IoList;      |         |
first([H|_]) -> H.                         |         |
                                           |         |
-spec refine_as_list(iolist()) ->          |         |
byte() | binary() | iolist().              |         |
refine_as_list(IoList)                     | OK      |
    when is_list(IoList) ->                |         |
    IoList;                                |         |
refine_as_list(IoList)                     |         |
    when is_binary(IoList) ->              |         |
    binary_to_list(IoList).                |         |
                                           |         |
-spec refine1([term()], iolist()) ->       |         |
[byte() | binary() | iolist()].            |         |
refine1(X, X) -> X.                        | OK      |
                                           |         |
-spec refine2(iolist(), [term()]) ->       |         |
    [byte() | binary() | iolist()].        |         |
refine2(X, X) -> X.                        | OK      |
                                           |         |
-spec refine3(term(), iolist()) ->         |         |
    [byte() | binary() | iolist()].        |         |
refine3(X, X) -> X.                        | OK      |
                                           |         |
-spec refine4(iolist(), term()) ->         |         |
    [byte() | binary() | iolist()].        |         |
refine4(X, X) -> X.                        | OK      |
                                           |         |
-spec refine5(                             |         |
    iolist(), [atom() | binary()]          |         |
) -> [binary()].                           |         |
refine5(X, X) -> X.                        | ERROR   | X.
                                           |         | Expression has type:   [atom() | binary()]
                                           |         | Context expected type: [binary()]
                                           |         | 
                                           |         |   [atom() | binary()] is not compatible with [binary()]
                                           |         |   because
                                           |         |   atom() | binary() is not compatible with binary()
                                           |         |   because
                                           |         |   atom() is not compatible with binary()
                                           |         |
-spec refine6_neg(                         |         |
    iolist(), [atom() | binary()]          |         |
) -> [atom()].                             |         |
refine6_neg(X, X) -> X.                    | ERROR   | X.
                                           |         | Expression has type:   [atom() | binary()]
                                           |         | Context expected type: [atom()]
                                           |         | 
                                           |         |   [atom() | binary()] is not compatible with [atom()]
                                           |         |   because
                                           |         |   atom() | binary() is not compatible with atom()
                                           |         |   because
                                           |         |   binary() is not compatible with atom()
                                           |         |
-spec refine_to_empty1(                    |         |
    iolist(), [atom()]                     |         |
) -> [].                                   |         |
refine_to_empty1(X, X) -> X.               | ERROR   | X.
                                           |         | Expression has type:   [atom()]
                                           |         | Context expected type: []
                                           |         |
-spec refine_to_empty2(                    |         |
    [atom()], iolist()                     |         |
) -> [].                                   |         |
refine_to_empty2(X, X) -> X.               | OK      |
                                           |         |
-spec head_or([A], A) -> A.                |         |
head_or([A], _) -> A;                      | OK      |
head_or([_], A) -> A.                      |         |
                                           |         |
-spec io_list_head(iolist()) ->            |         |
    binary() | iolist() | number().        |         |
io_list_head(X) when is_list(X)            | OK      |
    -> head_or(X, X).                      |         |
                                           |         |
-spec ioio(iolist(), A) -> A.              |         |
ioio(_, A) ->  A.                          | OK      |
                                           |         |
-spec test() -> atom().                    |         |
test() -> ioio([<<>>], ok).                | OK      |
                                           |         |
-spec test2_neg(iolist()) -> wrong_ret.    |         |
test2_neg(X) -> X.                         | ERROR   | X.
                                           |         | Expression has type:   iolist()
                                           |         | Context expected type: 'wrong_ret'

%%% Copyright (c) Meta Platforms, Inc. and……         |
%%%                                        |         |
%%% This source code is licensed under the……         |
%%% the LICENSE file in the root directory……         |
                                           |         |
-module(funs_uncommon).                    |         |
-compile([export_all, nowarn_export_all]). |         |
                                           |         |
% Uncommon uses of lambdas                 |         |
                                           |         |
-spec test_01(number()) -> number().       |         |
test_01(N) ->                              | ERROR   |
  F = case N of                            |         |
        0 -> fun (_) -> 1 end;             |         |
        _ -> fun (X) -> X + 1 end          |         |
      end,                                 |         |
  F(1).                                    |         | 1.
                                           |         | Expected: none()
                                           |         | Got     : number()
                                           |         |
-record(rectup, {field :: {fun((a) -> a), ……         |
                                           |         |
-spec test_02() -> #rectup{}.              |         |
test_02() ->                               | ERROR   |
  #rectup{                                 |         |
    field = {fun(X) -> X end, an_atom}     |         | {fun, 'an_atom'}.
                                           |         | Expected: {fun(('a') -> 'a'), atom()}
                                           |         | Got     : {fun((none()) -> term()), 'an_atom'}
                                           |         | 
                                           |         |   at tuple index 1:
                                           |         |   {fun((none()) -> term()), 'an_atom'} is not a subtype of {fun(('a') -> 'a'), atom()}
                                           |         |   because
                                           |         |   fun((none()) -> term()) is not a subtype of fun(('a') -> 'a')
                                           |         |   because
                                           |         |   term() is not a subtype of 'a'
  }.                                       |         |
                                           |         |
-record(rec, {field :: fun((a) -> a)}).    |         |
                                           |         |
-spec test_03() -> #rec{}.                 |         |
test_03() ->                               | OK      |
  #rec{                                    |         |
    field = fun(X) -> X end                |         |
  }.                                       |         |
                                           |         |
-spec test_04(#rec{}) -> #rec{}.           |         |
test_04(R) ->                              | ERROR   |
  R#rec{                                   |         |
    field = {fun(X) -> X end, an_atom}     |         | {fun, 'an_atom'}.
                                           |         | Expected: fun(('a') -> 'a')
                                           |         | Got     : {fun((none()) -> term()), 'an_atom'}
  }.                                       |         |
                                           |         |
-spec test_05() -> #{key := fun((a) -> a)}……         |
test_05() ->                               | ERROR   |
  #{key => fun(X) -> X end}.               |         | #{..}.
                                           |         | Expected: #S{key := fun(('a') -> 'a')}
                                           |         | Got     : #S{key := fun((none()) -> term())}
                                           |         | 
                                           |         |   at shape key 'key':
                                           |         |   #S{key := fun((none()) -> term())} is not a subtype of #S{key := fun(('a') -> 'a')}
                                           |         |   because
                                           |         |   fun((none()) -> term()) is not a subtype of fun(('a') -> 'a')
                                           |         |   because
                                           |         |   term() is not a subtype of 'a'
                                           |         |
-spec test_06(                             |         |
   #{key := fun((a) -> a)}                 |         |
) -> #{key := fun((a) -> a)}.              |         |
test_06(M) ->                              | ERROR   |
  M#{key => fun(X) -> X end}.              |         | ..#{..}.
                                           |         | Expected: #S{key := fun(('a') -> 'a')}
                                           |         | Got     : #S{key := fun((none()) -> term())}
                                           |         | 
                                           |         |   at shape key 'key':
                                           |         |   #S{key := fun((none()) -> term())} is not a subtype of #S{key := fun(('a') -> 'a')}
                                           |         |   because
                                           |         |   fun((none()) -> term()) is not a subtype of fun(('a') -> 'a')
                                           |         |   because
                                           |         |   term() is not a subtype of 'a'
                                           |         |
-spec test_07() -> {fun((a) -> a)}.        |         |
test_07() ->                               | ERROR   |
  {fun(X) -> X end}.                       |         | {fun}.
                                           |         | Expected: {fun(('a') -> 'a')}
                                           |         | Got     : {fun((none()) -> term())}
                                           |         | 
                                           |         |   at tuple index 1:
                                           |         |   {fun((none()) -> term())} is not a subtype of {fun(('a') -> 'a')}
                                           |         |   because
                                           |         |   fun((none()) -> term()) is not a subtype of fun(('a') -> 'a')
                                           |         |   because
                                           |         |   term() is not a subtype of 'a'
                                           |         |
-spec test_08() -> {fun((a) -> a)}.        |         |
test_08() ->                               | ERROR   |
  Res = {fun(X) -> X end},                 |         |
  Res.                                     |         | Res.
                                           |         | Expected: {fun(('a') -> 'a')}
                                           |         | Got     : {fun((none()) -> term())}
                                           |         | 
                                           |         |   at tuple index 1:
                                           |         |   {fun((none()) -> term())} is not a subtype of {fun(('a') -> 'a')}
                                           |         |   because
                                           |         |   fun((none()) -> term()) is not a subtype of fun(('a') -> 'a')
                                           |         |   because
                                           |         |   term() is not a subtype of 'a'
                                           |         |
-spec test_09() -> b.                      |         |
test_09() ->                               | ERROR   |
  {F, _} = {fun(X) -> X end, a},           |         |
  F(b).                                    |         | 'b'.
                                           |         | Expected: none()
                                           |         | Got     : 'b'
                                           |         |
-spec test_10() -> [fun((a) -> a)].        |         |
test_10() ->                               | ERROR   |
  [fun(X) -> X end, fun(X) -> X end].      |         | [fun, fun].
                                           |         | Expected: [fun(('a') -> 'a')]
                                           |         | Got     : [fun((none()) -> term())]
                                           |         | 
                                           |         |   [fun((none()) -> term())] is not a subtype of [fun(('a') -> 'a')]
                                           |         |   because
                                           |         |   fun((none()) -> term()) is not a subtype of fun(('a') -> 'a')
                                           |         |   because
                                           |         |   term() is not a subtype of 'a'
                                           |         |
-spec test_11() -> [fun((a, b) -> a)].     |         |
test_11() ->                               | ERROR   |
  Res = [fun(X, _) -> X end],              |         |
  Res.                                     |         | Res.
                                           |         | Expected: [fun(('a', 'b') -> 'a')]
                                           |         | Got     : [fun((none(), none()) -> term())]
                                           |         | 
                                           |         |   [fun((none(), none()) -> term())] is not a subtype of [fun(('a', 'b') -> 'a')]
                                           |         |   because
                                           |         |   fun((none(), none()) -> term()) is not a subtype of fun(('a', 'b') -> 'a')
                                           |         |   because
                                           |         |   term() is not a subtype of 'a'
                                           |         |
-spec test_12(a) -> fun((b, c) ->          |         |
                      {a, b, c}).          |         |
test_12(a) ->                              | OK      |
  fun(b, c) -> {a, b, c} end.              |         |
                                           |         |
-spec test_13() ->                         |         |
  [fun((number()) -> number())].           |         |
test_13() ->                               | ERROR   |
  [                                        |         | [ || ].
                                           |         | Expected: [fun((number()) -> number())]
                                           |         | Got     : [fun((none()) -> term())]
                                           |         | 
                                           |         |   [fun((none()) -> term())] is not a subtype of [fun((number()) -> number())]
                                           |         |   because
                                           |         |   fun((none()) -> term()) is not a subtype of fun((number()) -> number())
                                           |         |   because
                                           |         |   term() is not a subtype of number()
    fun(X) -> X * Y end                    |         |
    || Y <- [1, 2, 3]                      |         |
  ].                                       |         |
                                           |         |
-spec test14() -> fun((a) -> a).           |         |
test14() ->                                | OK      |
  try                                      |         |
    erlang:display(ok)                     |         |
  of                                       |         |
    ok ->                                  |         |
      fun(X) -> X end                      |         |
  catch                                    |         |
    error ->                               |         |
      fun(X) -> X end                      |         |
  end.                                     |         |
                                           |         |
-spec test15() -> ok.                      |         |
test15() ->                                | OK      |
  fun(X) -> X end, fun(X) -> X end,        |         |
  ok.                                      |         |
                                           |         |
-spec test16() -> number().                |         |
test16() ->                                | ERROR   |
  F = fun(X) -> X end,                     |         |
  _ = F(2),                                |         | 2.
                                           |         | Expected: none()
                                           |         | Got     : number()
  F(3).                                    |         |
                                           |         |
-spec test17() -> number().                |         |
test17() ->                                | ERROR   |
  F = fun(X) -> X end,                     |         |
  _ = F(an_atom),                          |         | 'an_atom'.
                                           |         | Expected: none()
                                           |         | Got     : 'an_atom'
  F(3).                                    |         |

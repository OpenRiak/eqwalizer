%%% Copyright (c) Meta Platforms, Inc. and……         |
%%%                                        |         |
%%% This source code is licensed under the……         |
%%% the LICENSE file in the root directory……         |
                                           |         |
-module(pos).                              |         |
                                           |         |
-compile([export_all, nowarn_export_all]). |         |
                                           |         |
-spec atom_id1(atom()) -> atom().          |         |
atom_id1(X) ->                             | OK      |
    X.                                     |         |
                                           |         |
-spec atom_pat(atom()) -> term().          |         |
atom_pat(1) ->                             | OK      |
    ok.                                    |         |
                                           |         |
-spec atom_lit() -> atom().                |         |
atom_lit() -> ok.                          | OK      |
                                           |         |
-spec char_lit() -> number().              |         |
char_lit() -> $A.                          | OK      |
                                           |         |
-spec nil_lit() -> [atom()].               |         |
nil_lit() -> [].                           | OK      |
                                           |         |
-spec block_example() -> {atom()}.         |         |
block_example() ->                         | OK      |
    begin                                  |         |
        block,                             |         |
        {block}                            |         |
    end.                                   |         |
                                           |         |
-spec match_example() -> {match}.          |         |
match_example() ->                         | OK      |
    M = match,                             |         |
    {match} = {M}.                         |         |
                                           |         |
-spec clauses(term()) ->                   |         |
    atom() | number().                     |         |
clauses(X) ->                              | OK      |
    case X of                              |         |
        1 -> 1;                            |         |
        1 -> ok                            |         |
    end.                                   |         |

%%% Copyright (c) Meta Platforms, Inc. and……         |
%%%                                        |         |
%%% This source code is licensed under the……         |
%%% the LICENSE file in the root directory……         |
                                           |         |
-module(tries).                            |         |
                                           |         |
-compile([export_all, nowarn_export_all]). |         |
                                           |         |
-spec foo() -> {atom(), term()}.           |         |
foo() -> {foo, bar}.                       | OK      |
                                           |         |
-spec ok() -> ok.                          |         |
ok() -> ok.                                | OK      |
                                           |         |
-spec only_atom(atom()) -> ok.             |         |
only_atom(A) when is_atom(A) -> ok.        | OK      |
                                           |         |
-spec test01_pos() -> atom().              |         |
test01_pos() ->                            | OK      |
    try foo() of                           |         |
        {X, _} -> X                        |         |
    catch                                  |         |
        {error, _} -> error                |         |
    end.                                   |         |
                                           |         |
-spec test02_neg() -> atom().              |         |
test02_neg() ->                            | ERROR   |
    try foo() of                           |         |
        {_, Y} -> Y                        |         | Y.
                                           |         | Expression has type:   term()
                                           |         | Context expected type: atom()
    catch                                  |         |
        {error, _} -> error                |         |
    end.                                   |         |
                                           |         |
-spec test03_neg() -> atom().              |         |
test03_neg() ->                            | ERROR   |
    Res = try foo() of                     |         |
        {_, _} -> []                       |         |
    catch                                  |         |
        {error, _} -> error                |         |
    end,                                   |         |
    Res.                                   |         | Res.
                                           |         | Expression has type:   [] | 'error'
                                           |         | Context expected type: atom()
                                           |         | 
                                           |         |   [] | 'error' is not compatible with atom()
                                           |         |   because
                                           |         |   [] is not compatible with atom()
                                           |         |
-spec test04_pos(term()) ->                |         |
    {ok | error, atom()}.                  |         |
test04_pos(X) ->                           | OK      |
    Res = try foo() of                     |         |
              {_, _} -> ok                 |         |
          catch                            |         |
              {error, _} -> error          |         |
          after                            |         |
            if                             |         |
                is_atom(X) -> ok           |         |
            end                            |         |
          end,                             |         |
    {Res, X}.                              |         |
                                           |         |
-spec test05_pos(term()) ->                |         |
    {ok | error, atom()}.                  |         |
test05_pos(X) ->                           | OK      |
    A =                                    |         |
        try ok()                           |         |
        catch                              |         |
            {error, _} -> error            |         |
        after                              |         |
            if                             |         |
                is_atom(X) -> ok           |         |
            end                            |         |
        end,                               |         |
    {A, X}.                                |         |
                                           |         |
-spec test06_neg() -> ok.                  |         |
test06_neg() ->                            | ERROR   |
    try ok()                               |         |
    catch _ -> error                       |         | 'error'.
                                           |         | Expression has type:   'error'
                                           |         | Context expected type: 'ok'
    end.                                   |         |
                                           |         |
-spec test07_neg() -> error.               |         |
test07_neg() ->                            | ERROR   |
    try ok()                               |         | ok().
                                           |         | Expression has type:   'ok'
                                           |         | Context expected type: 'error'
    catch _ -> error                       |         |
    end.                                   |         |
                                           |         |
-spec test08_neg() -> ok.                  |         |
test08_neg() ->                            | ERROR   |
    try ok()                               |         |
    after                                  |         |
        only_atom(1)                       |         | 1.
                                           |         | Expression has type:   number()
                                           |         | Context expected type: atom()
    end.                                   |         |
                                           |         |
-spec test09_pos() -> ok.                  |         |
test09_pos() ->                            | OK      |
    try ok()                               |         |
    after                                  |         |
        only_atom(atom)                    |         |
    end.                                   |         |
                                           |         |
-spec test10_pos() -> ok.                  |         |
test10_pos() ->                            | OK      |
    try ok() of                            |         |
        X -> X                             |         |
    after                                  |         |
        only_atom(atom)                    |         |
    end.                                   |         |
                                           |         |
                                           |         |
-spec test11_pos(term(), boolean())        |         |
    -> atom().                             |         |
test11_pos(Y, Cond) ->                     | OK      |
    Res =                                  |         |
        try ok()                           |         |
        after                              |         |
            if is_atom(Y) -> ok end        |         |
        end,                               |         |
    if                                     |         |
        Cond -> Res;                       |         |
        true -> Y                          |         |
    end.                                   |         |
                                           |         |
-spec test12_neg(term(), boolean())        |         |
    -> atom().                             |         |
test12_neg(Y, Cond) ->                     | ERROR   |
    Res =                                  |         |
        try ok()                           |         |
        after                              |         |
            if is_number(Y) -> ok end      |         |
        end,                               |         |
    if                                     |         |
        Cond -> Res;                       |         |
        true -> Y                          |         | Y.
                                           |         | Expression has type:   number()
                                           |         | Context expected type: atom()
    end.                                   |         |
                                           |         |
-spec repeated_vars(term()) -> ok.         |         |
repeated_vars(X) ->                        | ERROR   |
    try X of                               |         |
        {X, X} -> X                        |         | X.
                                           |         | Expression has type:   term()
                                           |         | Context expected type: 'ok'
    after                                  |         |
        ok                                 |         |
    end.                                   |         |
                                           |         |
-spec test_repeated_vars2(term()) -> ok.   |         |
test_repeated_vars2(X) ->                  | ERROR   |
    Res = try X of                         |         |
        {X, X} -> X                        |         |
    after                                  |         |
        ok                                 |         |
    end,                                   |         |
    Res.                                   |         | Res.
                                           |         | Expression has type:   term()
                                           |         | Context expected type: 'ok'

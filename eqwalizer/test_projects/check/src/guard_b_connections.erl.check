%%% Copyright (c) Meta Platforms, Inc. and……         |
%%%                                        |         |
%%% This source code is licensed under the……         |
%%% the LICENSE file in the root directory……         |
                                           |         |
-module(guard_b_connections).              |         |
-compile([export_all, nowarn_export_all]). |         |
                                           |         |
-record(r1, {ab :: atom() | binary()}).    |         |
-record(r2, {a :: atom()}).                |         |
-record(r3, {}).                           |         |
                                           |         |
-type r1() :: #r1{}.                       |         |
-type r2() :: #r2{}.                       |         |
-type r3() :: #r3{}.                       |         |
                                           |         |
-type all() :: r1() | r2() | r3().         |         |
                                           |         |
-spec test1(all()) -> r1().                |         |
test1(R) when is_record(R, r1)             | ERROR   |
        orelse is_record(R, r2) ->         |         |
  R.                                       |         | R.
                                           |         | Expected: r1()
                                           |         | Got     : #r2{} | #r1{}
                                           |         | 
                                           |         |   #r2{} | #r1{} is not a subtype of r1()
                                           |         |   because
                                           |         |   #r2{} | #r1{} is not a subtype of #r1{}
                                           |         |   because
                                           |         |   #r2{} is not a subtype of #r1{}
                                           |         |
-spec test2(all()) -> r1().                |         |
test2(R) when is_record(R, r1)             | ERROR   |
  or is_record(R, r2) ->                   |         |
  R.                                       |         | R.
                                           |         | Expected: r1()
                                           |         | Got     : #r2{} | #r1{}
                                           |         | 
                                           |         |   #r2{} | #r1{} is not a subtype of r1()
                                           |         |   because
                                           |         |   #r2{} | #r1{} is not a subtype of #r1{}
                                           |         |   because
                                           |         |   #r2{} is not a subtype of #r1{}
                                           |         |
-spec test3(all()) -> r1().                |         |
test3(R) when                              | ERROR   |
    is_record(R, r1); is_record(R, r2) ->  |         |
  R.                                       |         | R.
                                           |         | Expected: r1()
                                           |         | Got     : #r1{} | #r2{}
                                           |         | 
                                           |         |   #r1{} | #r2{} is not a subtype of r1()
                                           |         |   because
                                           |         |   #r1{} | #r2{} is not a subtype of #r1{}
                                           |         |   because
                                           |         |   #r2{} is not a subtype of #r1{}
                                           |         |
-spec test4(all()) -> r1().                |         |
test4(R) when                              | OK      |
  ((is_record(R, r1) andalso is_atom(eleme……         |
    orelse is_record(R, r2) ->             |         |
  R.                                       |         |
                                           |         |
-spec test5(all()) -> r1().                |         |
test5(R) when                              | ERROR   |
  (is_record(R, r1) andalso is_atom(elemen……         |
    is_record(R, r2) ->                    |         |
  R.                                       |         | R.
                                           |         | Expected: r1()
                                           |         | Got     : #r1{} | #r2{}
                                           |         | 
                                           |         |   #r1{} | #r2{} is not a subtype of r1()
                                           |         |   because
                                           |         |   #r1{} | #r2{} is not a subtype of #r1{}
                                           |         |   because
                                           |         |   #r2{} is not a subtype of #r1{}
